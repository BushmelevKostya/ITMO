SELECT Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ, Н_ВЕДОМОСТИ.ИД
FROM Н_ТИПЫ_ВЕДОМОСТЕЙ
RIGHT JOIN Н_ВЕДОМОСТИ ON Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД = Н_ВЕДОМОСТИ.ТВ_ИД
WHERE Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД > 1 AND  DATE(Н_ВЕДОМОСТИ.ДАТА) > '1998-01-05' AND DATE(Н_ВЕДОМОСТИ.ДАТА) < '2010-06-18';



SELECT Н_ЛЮДИ.ИД, Н_ВЕДОМОСТИ.ИД, Н_СЕССИЯ.ДАТА
FROM Н_ЛЮДИ
INNER JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
INNER JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
WHERE Н_ЛЮДИ.ФАМИЛИЯ < 'Иванов' AND Н_ВЕДОМОСТИ.ИД > 12509;



SELECT COUNT(NAMES)
FROM (
SELECT ИМЯ
FROM Н_ЛЮДИ
GROUP BY ИМЯ
)AS NAMES;



SELECT COUNT(Н_УЧЕНИКИ.ГРУППА), Н_ПЛАНЫ.УЧЕБНЫЙ_ГОД, Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ
FROM Н_УЧЕНИКИ
INNER JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
INNER JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ' AND
SUBSTRING(Н_ПЛАНЫ.УЧЕБНЫЙ_ГОД, 1, 4) <= '2011' AND
SUBSTRING(Н_ПЛАНЫ.УЧЕБНЫЙ_ГОД, 6, 4) >= '2011'
GROUP BY Н_УЧЕНИКИ.ГРУППА, Н_ПЛАНЫ.УЧЕБНЫЙ_ГОД, Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ
HAVING COUNT(Н_УЧЕНИКИ.ГРУППА) < 10;



SELECT Н_УЧЕНИКИ.ГРУППА, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ОТЧЕСТВО, AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS INTEGER)) AS avg
FROM Н_ЛЮДИ
RIGHT JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
LEFT JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE ИМЯ != '.' AND
Н_ВЕДОМОСТИ.ОЦЕНКА IN ('2', '3', '4', '5') AND
Н_УЧЕНИКИ.ГРУППА = '4101'
GROUP BY Н_УЧЕНИКИ.ГРУППА, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ОТЧЕСТВО;

SELECT ОЦЕНКА
FROM Н_ВЕДОМОСТИ
INNER JOIN Н_УЧЕНИКИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE Н_УЧЕНИКИ.ГРУППА = '1101';



SELECT Н_НАПР_СПЕЦ.КОД_НАПРСПЕЦ,  Н_УЧЕНИКИ.ГРУППА, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ОТЧЕСТВО, Н_УЧЕНИКИ.П_ПРКОК_ИД, Н_УЧЕНИКИ.СОСТОЯНИЕ
FROM Н_УЧЕНИКИ
RIGHT JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
RIGHT JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
RIGHT JOIN Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ ON Н_ПЛАНЫ.НАПС_ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НАПС_ИД
RIGHT JOIN Н_НАПР_СПЕЦ ON Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД = Н_НАПР_СПЕЦ.ИД
RIGHT JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
WHERE НАЧАЛО < '2012-09-01 00:00:00' AND
Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная' AND
Н_ПЛАНЫ.КУРС = '1' AND
Н_НАПР_СПЕЦ.КОД_НАПРСПЕЦ = '220109';




SELECT COUNT(HUMANS)
FROM (
SELECT AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS INTEGER)) AS AVERAGE
FROM Н_ЛЮДИ
RIGHT JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
RIGHT JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
RIGHT JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
RIGHT JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
WHERE 
Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
GROUP BY Н_ЛЮДИ.ИМЯ, Н_ВЕДОМОСТИ.ОЦЕНКА
HAVING Н_ВЕДОМОСТИ.ОЦЕНКА = '5'
) AS HUMANS;



-- средний возраст группы 1538 за 2011/2012 год

SELECT 2011.5 - avg(CAST(SUBSTR(to_char(Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ, 'YYYYMMDD'), 1, 4) AS INTEGER)) AS AVG_AGE
FROM Н_УЧЕНИКИ
INNER JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
INNER JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
INNER JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE Н_ПЛАНЫ.УЧЕБНЫЙ_ГОД = '2011/2012'
AND Н_УЧЕНИКИ.ГРУППА = '1538';


-- получить тип данных
SELECT data_type, column_name
FROM information_schema.COLUMNS
WHERE table_name = 'Н_ПЛАНЫ';

-- подготовка к рубежке

-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Н_ТИПЫ_ВЕДОМОСТЕЙ, Н_ВЕДОМОСТИ.
-- Вывести атрибуты: Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД, Н_ВЕДОМОСТИ.ДАТА.
-- Фильтры (AND):
-- a) Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ < Экзаменационный лист.
-- b) Н_ВЕДОМОСТИ.ЧЛВК_ИД < 142390.

SELECT Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД, Н_ВЕДОМОСТИ.ДАТА, Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ, Н_ВЕДОМОСТИ.ЧЛВК_ИД
FROM Н_ВЕДОМОСТИ
RIGHT JOIN Н_ТИПЫ_ВЕДОМОСТЕЙ ON Н_ВЕДОМОСТИ.ТВ_ИД = Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД
WHERE Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ < 'Экзаменационный лист'
AND Н_ВЕДОМОСТИ.ЧЛВК_ИД < 142390;

-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.ДАТА.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ФАМИЛИЯ < Ёлкин.
-- b) Н_ВЕДОМОСТИ.ИД = 1490007.
-- c) Н_СЕССИЯ.УЧГОД > 2001/2002.
-- Вид соединения: INNER JOIN.

SELECT Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.ДАТА
FROM Н_ЛЮДИ
INNER JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
INNER JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
WHERE Н_ЛЮДИ.ФАМИЛИЯ < 'Ёлкин'
AND Н_ВЕДОМОСТИ.ИД > 40000
AND Н_СЕССИЯ.УЧГОД > '2001/2002';

-- Составить запрос, считающий
-- студентов КТИУ тех, кто старше 25 лет.

SELECT COUNT(PEOPLES)
FROM (SELECT Н_УЧЕНИКИ.ИД
      FROM Н_УЧЕНИКИ
               INNER JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
               INNER JOIN Н_ОТДЕЛЫ ON Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД
               INNER JOIN Н_ОБУЧЕНИЯ ON Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
               INNER JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД
      WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
        AND DATE (Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ) < '1998-01-01'
    ) AS PEOPLES;

-- Выдать различные имена людей и число людей с каждой из этих
-- имен, ограничив список именами, встречающимися меньше 50 раз
-- Для реализации использовать подзапрос.

SELECT ИМЯ, A
FROM
(SELECT Н_ЛЮДИ.ИМЯ, COUNT(Н_ЛЮДИ.ИМЯ) AS A
FROM Н_ЛЮДИ
GROUP BY Н_ЛЮДИ.ИМЯ) AS B
WHERE B.A < 50;